datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  role      UserRole   @default(PLAYER)
  name      String
  telegram  String?
  createdAt DateTime   @default(now())
  AuditLog  AuditLog[]
}

enum UserRole {
  PLAYER
  ADMIN
}

model Player {
  id        String   @id @default(cuid())
  name      String
  telegram  String?
  phone     String?
  createdAt DateTime @default(now())

  tournaments PlayerTournament[]
  statistics  PlayerStatistics?
}

model Tournament {
  id          String   @id @default(cuid())
  name        String
  date        DateTime
  location    String
  description String?

  buyin       Int      @default(0) // NEW: buy-in sum for this tournament
  rebuy       Int      @default(0) // NEW: rebuy sum for this tournament

  players PlayerTournament[]
}

model PlayerTournament {
  id           String @id @default(cuid())
  playerId     String
  tournamentId String
  points       Int    @default(0)
  rank         Int?
  bounty       Int?   @default(0)
  reentries    Int    @default(0)


  player     Player     @relation(fields: [playerId], references: [id])
  tournament Tournament @relation(fields: [tournamentId], references: [id])

  @@unique([playerId, tournamentId])
}

model PlayerStatistics {
  id       String @id @default(cuid())
  playerId String @unique
  player   Player @relation(fields: [playerId], references: [id])

  totalTournaments Int   @default(0)
  totalPoints      Int   @default(0)
  averageRank      Float @default(0)
  bestRank         Int?
  bounty           Int   @default(0)
}

model AuditLog {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  action     String
  entityType String
  entityId   String
  details    Json?
  createdAt  DateTime @default(now())
}
